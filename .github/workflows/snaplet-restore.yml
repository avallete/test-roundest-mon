name: Snaplet Restore

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - master

jobs:
  # Label of the runner job
  snaplet-restore:
    name: Snaplet Restore
    timeout-minutes: 10
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest # Must match the database where snapshot was taken
        env:
          PGDATA: /data # Important: data location has to be changed as default is defined as a volume, so snapshot won't persist
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: snapshot
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name snapshot
        ports:
          - 5432:5432

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: test-action
        uses: ./actions/snaplet-restore
        env:
          SNAPLET_ACCESS_TOKEN: ${{ secrets.SNAPLET_ACCESS_TOKEN }}
          SNAPLET_PROJECT_ID: ${{ secrets.SNAPLET_PROJECT_ID }}
          SNAPLET_TARGET_DATABASE_URL: postgres://postgres:postgres@localhost:5432/snapshot
        with:
          docker-image-tag: hub.docker.com/avallete/snaplet-restore-container